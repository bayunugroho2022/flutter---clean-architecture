# This is a basic workflow to help you get started with Actions
name: Releases

# Controls when the workflow will run
on:
  push:
    # Triggers the workflow on push or pull request events but only for the tagged
    tags:
      - '*'

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: release apk
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: "11.0"
      FLUTTER_VERSION: "2.10.5"
    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: ${{env.JAVA_VERSION}}
#      - uses: subosito/flutter-action@v2
#        with:
#          flutter-version: ${{env.FLUTTER_VERSION}}
#      - run: flutter pub get
##      - run: flutter analyze
##      - run: flutter test
#      - run: flutter build apk --debug
#      - uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/flutter-apk/*.apk"
#          token: ${{ secrets.GITHUB_TOKEN }}
      - name: send default message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
#          document: app/build/outputs/apk/debug/app-debug.apk
          photo: assets/images/splash_logo.png
          document: assets/images/splash_logo.png


